@model List<MediCareCMS.Models.LabTestRequest>

@{
    ViewData["Title"] = "Assigned Lab Tests";
}

@functions {
    public string GetNormalValueForTest(string testName)
    {
        if (string.IsNullOrWhiteSpace(testName)) return "N/A";

        testName = testName.Trim().ToLower();

        if (testName.Contains("blood sugar")) return "70-110";
        if (testName.Contains("blood pressure")) return "80-120";
        if (testName.Contains("hemoglobin")) return "13-17";
        if (testName.Contains("leukocyte")) return "4,000-11,000";
        if (testName.Contains("cbc") || testName.Contains("complete blood count")) return "Various";
        if (testName.Contains("corona")) return "Negative";

        return "N/A";
    }
}

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />

<div class="container mt-5">
    <div class="d-flex justify-content-between mb-3">
        <h2 class="text-primary">Assigned Lab Tests</h2>
        <a class="btn btn-outline-primary" href="/Lab/LabDashboard">Return to Dashboard</a>
    </div>

    <table class="table table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Request ID</th>
                <th>Patient Name</th>
                <th>Doctor Name</th>
                <th>Test Name</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.RequestId</td>
                    <td>@item.PatientName</td>
                    <td>@item.DoctorName</td>
                    <td>@item.TestName</td>
                    <td style="color:@(item.Status == "Completed" ? "green" : "red")">@item.Status</td>
                    <td>
                        @if (item.Status == "Completed")
                        {
                            <button class="btn btn-info btn-sm" onclick="viewBill(@item.RequestId)">View Bill</button>
                        }
                        else
                        {
                            <button class="btn btn-success btn-sm"
                                    data-toggle="modal"
                                    data-target="#testModal"
                                    data-requestid="@item.RequestId"
                                    data-testname="@item.TestName"
                                    data-normalvalue="@GetNormalValueForTest(item.TestName)">
                                Test
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Test Result Modal -->
<div class="modal fade" id="testModal" tabindex="-1" role="dialog" aria-labelledby="testModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content p-3">
            <div class="modal-header">
                <h5 class="modal-title">Record Test Result: <span id="testNameTitle" class="font-weight-bold"></span></h5>
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="RequestId" />
                <div class="form-group">
                    <label>Normal Value Range</label>
                    <input type="text" class="form-control" id="NormalValue" readonly />
                </div>
                <div class="form-group">
                    <label>Patient's Actual Value <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="ActualValue" />
                </div>
                <div class="form-group">
                    <label>Remarks (optional)</label>
                    <textarea class="form-control" id="Remarks" rows="2"></textarea>
                </div>
                <div id="highlightMsg" class="font-weight-bold mt-2"></div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" onclick="submitResult()">Save Result</button>
                <button class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- View Bill Modal -->
<div class="modal fade" id="billModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content p-3">
            <div class="modal-header">
                <h5 class="modal-title">Lab Bill</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <p><strong>Bill ID:</strong> <span id="billId"></span></p>
                <p><strong>Total Amount:</strong> ₹<span id="billAmount"></span></p>
                <p><strong>Status:</strong> <span id="billStatus" class="font-weight-bold text-primary"></span></p>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<script>
    $('#testModal').on('show.bs.modal', function (event) {
        const button = $(event.relatedTarget);
        $('#RequestId').val(button.data('requestid'));
        $('#testNameTitle').text(button.data('testname'));
        $('#NormalValue').val(button.data('normalvalue') || 'N/A');
        $('#ActualValue').val('');
        $('#Remarks').val('');
        $('#highlightMsg').text('');
    });

    function submitResult() {
        const reqId = parseInt($('#RequestId').val());
        const normal = $('#NormalValue').val();
        const actual = $('#ActualValue').val().trim();
        const remarks = $('#Remarks').val();
        const highlight = $('#highlightMsg');

        if (!actual) {
            highlight.text("Please enter a valid value.").css("color", "red");
            return;
        }

        const parts = normal.split('-');
        if (parts.length === 2 && !isNaN(parts[0]) && !isNaN(parts[1]) && !isNaN(actual)) {
            const low = parseFloat(parts[0]);
            const high = parseFloat(parts[1]);
            const actualVal = parseFloat(actual);

            if (actualVal < low) highlight.text("Low Value!").css("color", "red");
            else if (actualVal > high) highlight.text("High Value!").css("color", "red");
            else highlight.text("Normal").css("color", "green");
        }

        fetch('/Lab/AjaxSaveResult', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                RequestId: reqId,
                ResultValue: `${actual} (Normal: ${normal})`,
                Remarks: remarks,
                RecordedDate: new Date().toISOString()
            })
        })
        .then(res => res.json())
        .then(data => {
            if (data.ok) {
                $('#testModal').modal('hide');
                alert("Result Saved!");
                location.reload();
            } else {
                alert("Error saving result.");
                console.error(data.error);
            }
        })
        .catch(err => {
            console.error("Error:", err);
            alert("Network error occurred.");
        });
    }

    function viewBill(requestId) {
        fetch(`/Lab/GetBillByRequestId/${requestId}`)
            .then(res => res.json())
            .then(data => {
                if (data.ok) {
                    $('#billId').text(data.bill.BillId);
                    $('#billAmount').text(data.bill.TotalAmount);
                    $('#billStatus').text(data.bill.Status);
                    $('#billModal').modal('show');
                } else {
                    alert("Bill not found.");
                }
            })
            .catch(err => {
                console.error("Error fetching bill:", err);
                alert("Error loading bill.");
            });
    }
</script>
